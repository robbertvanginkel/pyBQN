import inspect
from multiprocessing import Value
import unittest
import math

from pybqn.provide import provides
from pybqn.vm import VM
from pybqn.runtime import r0, r1, r, bqnstr


class RuntimeTest(unittest.TestCase):
    def test_r0(self):
        vm = VM(*r0(provides))
        self.assertIsNotNone(vm())

    def test_r1(self):
        runtime_0 = VM(*r0(provides))()
        runtime_1 = VM(*r1(provides, runtime_0))()
        self.assertIsNotNone(runtime_1)

    def test_runtime(self):
        self.assertIsNotNone(VM(*r(provides))())


class PrimitiveTests(unittest.TestCase):
    """https://github.com/mlochbaum/BQN/blob/f4b09b675386c789c8296c96874871916a3abdcf/test/cases/prim.bqn

    pbpaste | tr '\n' '\0' | xargs -n1 -0 bqn utils/cpy.bqn ../../BQN
    """

    def setUp(self) -> None:
        self.runtime, _, _ = VM(*r(provides))()

    def runcases(self, cases: dict[str, tuple[int | type[Exception], list]]):
    # def runcases(self, cases):
        for case, (expected, input) in cases.items():
            with self.subTest(case=case):
                if inspect.isclass(expected) and issubclass(expected, Exception):
                    with self.assertRaises(expected):
                        self.assertEqual(VM(*input)(), expected)
                else:
                    out = VM(*input)()
                    self.assertEqual(out, expected)

    def test_layer0(self):
        runtime = self.runtime
        # fmt: off
        cases = {
            "0≡¯2+2"                    : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[0],runtime[18],0,-2,2],[[0,1,0]],[[0,0]]]),
            "1e4≡5e3+5e3"               : (1, [[0,3,0,0,0,3,17,0,1,0,2,17,7],[runtime[0],runtime[18],10000,5000],[[0,1,0]],[[0,0]]]),
            "'c'≡'a'+2"                 : (1, [[0,2,0,0,0,4,17,0,1,0,3,17,7],[runtime[0],runtime[18],2,'c','a'],[[0,1,0]],[[0,0]]]),
            "'a'≡¯2+'c'"                : (1, [[0,4,0,0,0,2,17,0,1,0,3,17,7],[runtime[0],runtime[18],-2,'a','c'],[[0,1,0]],[[0,0]]]),
            "'a'+'c'"                   : (TypeError, [[0,2,0,0,0,1,17,7],[runtime[0],'a','c'],[[0,1,0]],[[0,0]]]),
            "F←-⋄f+2"                   : (TypeError, [[0,1,33,0,0,48,6,0,2,0,0,34,0,0,17,7],[runtime[0],runtime[1],2],[[0,1,0]],[[0,1]]]),
            "¯4≡+¯4"                    : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[0],runtime[18],-4],[[0,1,0]],[[0,0]]]),
            "+'x'"                      : (TypeError, [[0,1,0,0,16,7],[runtime[0],'x'],[[0,1,0]],[[0,0]]]),
            "F←-⋄+f"                    : (TypeError, [[0,1,33,0,0,48,6,34,0,0,0,0,16,7],[runtime[0],runtime[1]],[[0,1,0]],[[0,1]]]),
            "¯∞≡1e6-∞"                  : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[1],runtime[18],-math.inf,1000000,math.inf],[[0,1,0]],[[0,0]]]),
            "4≡-¯4"                     : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[1],runtime[18],4,-4],[[0,1,0]],[[0,0]]]),
            "¯∞≡-∞"                     : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[1],runtime[18],-math.inf,math.inf],[[0,1,0]],[[0,0]]]),
            "∞≡-¯∞"                     : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[1],runtime[18],math.inf,-math.inf],[[0,1,0]],[[0,0]]]),
            "4≡9-5"                     : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[1],runtime[18],4,9,5],[[0,1,0]],[[0,0]]]),
            "@≡'a'-97"                  : (1, [[0,2,0,0,0,4,17,0,1,0,3,17,7],[runtime[1],runtime[18],97,'\0','a'],[[0,1,0]],[[0,0]]]),
            "3≡'d'-'a'"                 : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[1],runtime[18],3,'d','a'],[[0,1,0]],[[0,0]]]),
            "'Q'≡'q'+'A'-'a'"           : (1, [[0,6,0,1,0,5,17,0,0,0,4,17,0,2,0,3,17,7],[runtime[0],runtime[1],runtime[18],'Q','q','A','a'],[[0,1,0]],[[0,0]]]),
            "97-'a'"                    : (TypeError, [[0,2,0,0,0,1,17,7],[runtime[1],97,'a'],[[0,1,0]],[[0,0]]]),
            "@-1"                       : (ValueError, [[0,1,0,0,0,2,17,7],[runtime[1],1,'\0'],[[0,1,0]],[[0,0]]]),
            "-'a'"                      : (TypeError, [[0,1,0,0,16,7],[runtime[1],'a'],[[0,1,0]],[[0,0]]]),
            "F←÷⋄-f"                    : (TypeError, [[0,1,33,0,0,48,6,34,0,0,0,0,16,7],[runtime[1],runtime[3]],[[0,1,0]],[[0,1]]]),
            "1.5≡3×0.5"                 : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[2],runtime[18],1.5,3,0.5],[[0,1,0]],[[0,0]]]),
            "2×'a'"                     : (TypeError, [[0,2,0,0,0,1,17,7],[runtime[2],2,'a'],[[0,1,0]],[[0,0]]]),
            "4≡÷0.25"                   : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[3],runtime[18],4,0.25],[[0,1,0]],[[0,0]]]),
            "∞≡÷0"                      : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[3],runtime[18],math.inf,0],[[0,1,0]],[[0,0]]]),
            "0≡÷∞"                      : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[3],runtime[18],0,math.inf],[[0,1,0]],[[0,0]]]),
            "÷'b'"                      : (TypeError, [[0,1,0,0,16,7],[runtime[3],'b'],[[0,1,0]],[[0,0]]]),
            "F←√-⋄÷f"                   : (TypeError, [[0,0,0,2,20,33,0,0,48,6,34,0,0,0,1,16,7],[runtime[1],runtime[3],runtime[5]],[[0,1,0]],[[0,1]]]),
            "1≡⋆0"                      : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[4],runtime[18],1,0],[[0,1,0]],[[0,0]]]),
            "¯1≡¯1⋆5"                   : (1, [[0,3,0,0,0,2,17,0,1,0,2,17,7],[runtime[4],runtime[18],-1,5],[[0,1,0]],[[0,0]]]),
            "1≡¯1⋆¯6"                   : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[4],runtime[18],1,-1,-6],[[0,1,0]],[[0,0]]]),
            "⋆'π'"                      : (TypeError, [[0,1,0,0,16,7],[runtime[4],'π'],[[0,1,0]],[[0,0]]]),
            "'e'⋆'π'"                   : (TypeError, [[0,2,0,0,0,1,17,7],[runtime[4],'e','π'],[[0,1,0]],[[0,0]]]),
            "3≡⌊3.9"                    : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[6],runtime[18],3,3.9],[[0,1,0]],[[0,0]]]),
            "¯4≡⌊¯3.9"                  : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[6],runtime[18],-4,-3.9],[[0,1,0]],[[0,0]]]),
            "∞≡⌊∞"                      : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[6],runtime[18],math.inf],[[0,1,0]],[[0,0]]]),
            "¯∞≡⌊¯∞"                    : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[6],runtime[18],-math.inf],[[0,1,0]],[[0,0]]]),
            "¯1e30≡⌊¯1e30"              : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[6],runtime[18],-1e30],[[0,1,0]],[[0,0]]]),
            "F←⌈⋄⌊f"                    : (TypeError, [[0,1,33,0,0,48,6,34,0,0,0,0,16,7],[runtime[6],runtime[7]],[[0,1,0]],[[0,1]]]),
            "1≡1=1"                     : (1, [[0,2,0,0,0,2,17,0,1,0,2,17,7],[runtime[15],runtime[18],1],[[0,1,0]],[[0,0]]]),
            "0≡¯1=∞"                    : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[15],runtime[18],0,-1,math.inf],[[0,1,0]],[[0,0]]]),
            "1≡'a'='a'"                 : (1, [[0,3,0,0,0,3,17,0,1,0,2,17,7],[runtime[15],runtime[18],1,'a'],[[0,1,0]],[[0,0]]]),
            "0≡'a'='A'"                 : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[15],runtime[18],0,'a','A'],[[0,1,0]],[[0,0]]]),
            "1≡{F←+⋄f=f}"               : (1, [[1,1,0,2,0,3,17,7,0,0,33,0,0,48,6,32,0,0,0,1,34,0,0,17,7],[runtime[0],runtime[15],runtime[18],1],[[0,1,0],[0,1,1]],[[0,0],[8,1]]]),
            "1≡{a‿b←⟨+´,+´⟩⋄a=b}"       : (1, [[1,1,0,2,0,4,17,7,0,3,0,0,26,0,3,0,0,26,11,2,33,0,0,33,0,1,12,2,48,6,34,0,1,0,1,34,0,0,17,7],[runtime[0],runtime[15],runtime[18],runtime[50],1],[[0,1,0],[0,1,1]],[[0,0],[8,2]]]),
            "0≡{_op←{𝕗}⋄op='o'}"        : (1, [[1,1,0,1,0,2,17,7,1,2,33,0,0,48,6,0,3,0,0,34,0,0,17,7,34,0,1,7],[runtime[15],runtime[18],0,'o'],[[0,1,0],[0,1,1],[1,1,2]],[[0,0],[8,1],[24,2]]]),
            "0≡{F←{𝕩}⋄G←{𝕩}⋄f=g}"       : (1, [[1,1,0,1,0,2,17,7,1,2,33,0,0,48,6,1,3,33,0,1,48,6,34,0,1,0,0,34,0,0,17,7,34,0,1,7,34,0,1,7],[runtime[15],runtime[18],0],[[0,1,0],[0,1,1],[0,0,2],[0,0,3]],[[0,0],[8,2],[32,3],[36,3]]]),
            "1≡{F←{𝕩}⋄f=f}"             : (1, [[1,1,0,1,0,2,17,7,1,2,33,0,0,48,6,32,0,0,0,0,34,0,0,17,7,34,0,1,7],[runtime[15],runtime[18],1],[[0,1,0],[0,1,1],[0,0,2]],[[0,0],[8,1],[25,3]]]),
            "1≡1≤1"                     : (1, [[0,2,0,0,0,2,17,0,1,0,2,17,7],[runtime[16],runtime[18],1],[[0,1,0]],[[0,0]]]),
            "1≡¯∞≤¯1e3"                 : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[16],runtime[18],1,-math.inf,-1000],[[0,1,0]],[[0,0]]]),
            "0≡∞≤¯∞"                    : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[16],runtime[18],0,math.inf,-math.inf],[[0,1,0]],[[0,0]]]),
            "1≡∞≤@"                     : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[16],runtime[18],1,math.inf,'\0'],[[0,1,0]],[[0,0]]]),
            "0≡'z'≤¯0.5"                : (1, [[0,3,0,0,0,4,17,0,1,0,2,17,7],[runtime[16],runtime[18],0,-0.5,'z'],[[0,1,0]],[[0,0]]]),
            "1≡'a'≤'a'"                 : (1, [[0,3,0,0,0,3,17,0,1,0,2,17,7],[runtime[16],runtime[18],1,'a'],[[0,1,0]],[[0,0]]]),
            "0≡'c'≤'a'"                 : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[16],runtime[18],0,'c','a'],[[0,1,0]],[[0,0]]]),
            "F←+⋄G←-⋄f≤g"               : (TypeError, [[0,0,33,0,0,48,6,0,1,33,0,1,48,6,34,0,1,0,2,34,0,0,17,7],[runtime[0],runtime[1],runtime[16]],[[0,1,0]],[[0,2]]]),
            "⟨⟩≡≢<2"                    : (1, [[0,3,0,0,16,0,2,16,0,1,11,0,17,7],[runtime[12],runtime[18],runtime[19],2],[[0,1,0]],[[0,0]]]),
            '⟨3⟩≡≢"abc"'                : (1, [[0,3,0,1,16,0,0,0,2,11,1,17,7],[runtime[18],runtime[19],3,bqnstr("abc")],[[0,1,0]],[[0,0]]]),
            '⟨2,3⟩≡≢>"abc"‿"fed"'       : (1, [[0,5,0,6,11,2,0,0,16,0,2,16,0,1,0,3,0,4,11,2,17,7],[runtime[13],runtime[18],runtime[19],2,3,bqnstr("abc"),bqnstr("fed")],[[0,1,0]],[[0,0]]]),
            '⟨2,3,4,5⟩≡≢2‿3‿4‿5⥊↕120'   : (1, [[0,8,0,3,16,0,2,0,4,0,5,0,6,0,7,11,4,17,0,1,16,0,0,0,4,0,5,0,6,0,7,11,4,17,7],[runtime[18],runtime[19],runtime[22],runtime[28],2,3,4,5,120],[[0,1,0]],[[0,0]]]),
            '⟨6⟩≡≢⥊>"abc"‿"fed"'        : (1, [[0,5,0,6,11,2,0,0,16,0,3,16,0,2,16,0,1,0,4,11,1,17,7],[runtime[13],runtime[18],runtime[19],runtime[22],6,bqnstr("abc"),bqnstr("fed")],[[0,1,0]],[[0,0]]]),
            '"abc"≡0⊑"abc"‿"de"'        : (1, [[0,3,0,4,11,2,0,1,0,2,17,0,0,0,3,17,7],[runtime[18],runtime[37],0,bqnstr("abc"),bqnstr("de")],[[0,1,0]],[[0,0]]]),
            '"de"≡1⊑"abc"‿"de"'         : (1, [[0,4,0,3,11,2,0,1,0,2,17,0,0,0,3,17,7],[runtime[18],runtime[37],1,bqnstr("de"),bqnstr("abc")],[[0,1,0]],[[0,0]]]),
            "⟨⟩≡↕0"                     : (1, [[0,2,0,1,16,0,0,11,0,17,7],[runtime[18],runtime[28],0],[[0,1,0]],[[0,0]]]),
            "⟨0⟩≡↕1"                    : (1, [[0,3,0,1,16,0,0,0,2,11,1,17,7],[runtime[18],runtime[28],0,1],[[0,1,0]],[[0,0]]]),
            "⟨0,1,2,3,4,5,6⟩≡↕7"        : (1, [[0,9,0,1,16,0,0,0,2,0,3,0,4,0,5,0,6,0,7,0,8,11,7,17,7],[runtime[18],runtime[28],0,1,2,3,4,5,6,7],[[0,1,0]],[[0,0]]]),
            "1≡!1"                      : (1, [[0,2,0,1,16,0,0,0,2,17,7],[runtime[18],runtime[43],1],[[0,1,0]],[[0,0]]]),
            "1≡'e'!1"				    : (1, [[0,2,0,1,0,3,17,0,0,0,2,17,7],[runtime[18],runtime[43],1,'e'],[[0,1,0]],[[0,0]]]),
            "!0"                        : (AssertionError, [[0,1,0,0,16,7],[runtime[43],0],[[0,1,0]],[[0,0]]]),
            '"error"!"abc"'             : (AssertionError, [[0,2,0,0,0,1,17,7],[runtime[43],bqnstr("error"),bqnstr("abc")],[[0,1,0]],[[0,0]]]),
        }
        # fmt: on
        self.runcases(cases)


    def test_layer1(self):
        runtime = self.runtime
        self.runcases({
            "3≡4>◶+‿-1"                         : (1, [[0,7,0,0,0,1,11,2,0,4,0,2,27,0,6,17,0,3,0,5,17,7],[runtime[0],runtime[1],runtime[13],runtime[18],runtime[59],3,4,1],[[0,1,0]],[[0,0]]]),
            "3≡4⊢◶+‿-1"                         : (1, [[0,7,0,0,0,1,11,2,0,4,0,3,27,0,6,17,0,2,0,5,17,7],[runtime[0],runtime[1],runtime[18],runtime[21],runtime[59],3,4,1],[[0,1,0]],[[0,0]]]),
            "3≡4 1◶+‿-1"                        : (1, [[0,6,0,0,0,1,11,2,0,3,0,6,27,0,5,17,0,2,0,4,17,7],[runtime[0],runtime[1],runtime[18],runtime[59],3,4,1],[[0,1,0]],[[0,0]]]),
            "5≡4<◶+‿-1"                         : (1, [[0,7,0,0,0,1,11,2,0,4,0,2,27,0,6,17,0,3,0,5,17,7],[runtime[0],runtime[1],runtime[12],runtime[18],runtime[59],5,4,1],[[0,1,0]],[[0,0]]]),
            "5≡4 0◶+‿-1"                        : (1, [[0,7,0,0,0,1,11,2,0,3,0,6,27,0,5,17,0,2,0,4,17,7],[runtime[0],runtime[1],runtime[18],runtime[59],5,4,0,1],[[0,1,0]],[[0,0]]]),
            "1≡-⊘0 ¯1"                          : (1, [[0,5,0,4,0,2,0,0,27,16,0,1,0,3,17,7],[runtime[1],runtime[18],runtime[58],1,0,-1],[[0,1,0]],[[0,0]]]),
            "1≡¯1-⊘+2"                          : (1, [[0,6,0,0,0,3,0,1,27,0,5,17,0,2,0,4,17,7],[runtime[0],runtime[1],runtime[18],runtime[58],1,-1,2],[[0,1,0]],[[0,0]]]),
            '"abc"≡⊢"abc"'                      : (1, [[0,2,0,1,16,0,0,0,2,17,7],[runtime[18],runtime[21],bqnstr("abc")],[[0,1,0]],[[0,0]]]),
            '""≡3⊢""'                           : (1, [[0,3,0,1,0,2,17,0,0,0,3,17,7],[runtime[18],runtime[21],3,bqnstr("")],[[0,1,0]],[[0,0]]]),
            "⟨⟩≡⊣⟨⟩"                            : (1, [[11,0,0,1,16,0,0,11,0,17,7],[runtime[18],runtime[20]],[[0,1,0]],[[0,0]]]),
            '"ab"≡"ab"⊣⟨⟩'                      : (1, [[11,0,0,1,0,2,17,0,0,0,2,17,7],[runtime[18],runtime[20],bqnstr("ab")],[[0,1,0]],[[0,0]]]),
            "4≡+˜2"                             : (1, [[0,4,0,2,0,0,26,16,0,1,0,3,17,7],[runtime[0],runtime[18],runtime[45],4,2],[[0,1,0]],[[0,0]]]),
            "3≡1-˜4"                            : (1, [[0,5,0,2,0,0,26,0,4,17,0,1,0,3,17,7],[runtime[1],runtime[18],runtime[45],3,1,4],[[0,1,0]],[[0,0]]]),
            "1≡-∘×¯6"                           : (1, [[0,5,0,1,0,3,0,0,27,16,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[53],1,-6],[[0,1,0]],[[0,0]]]),
            "¯6≡2-∘×3"                          : (1, [[0,6,0,1,0,3,0,0,27,0,5,17,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[53],-6,2,3],[[0,1,0]],[[0,0]]]),
            "1≡-○×¯7"                           : (1, [[0,5,0,1,0,3,0,0,27,16,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[54],1,-7],[[0,1,0]],[[0,0]]]),
            "2≡5-○×¯7"                          : (1, [[0,6,0,1,0,3,0,0,27,0,5,17,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[54],2,5,-7],[[0,1,0]],[[0,0]]]),
            "¯20≡1⊸-⊸×5"                        : (1, [[0,6,0,1,0,3,0,0,0,3,0,5,27,27,16,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[55],-20,1,5],[[0,1,0]],[[0,0]]]),
            '(0‿2+⌜0‿1)≡(>⟨"ab","cd"⟩)≢⊸⥊↕4'    : (1, [[0,11,0,5,16,0,4,0,7,0,3,27,0,12,0,13,11,2,0,1,16,17,0,2,0,8,0,10,11,2,0,6,0,0,26,0,8,0,9,11,2,17,17,7],[runtime[0],runtime[13],runtime[18],runtime[19],runtime[22],runtime[28],runtime[48],runtime[55],0,2,1,4,bqnstr("ab"),bqnstr("cd")],[[0,1,0]],[[0,0]]]),
            "20≡×⟜(-⟜1)5"                       : (1, [[0,6,0,5,0,3,0,0,27,0,3,0,1,27,16,0,2,0,4,17,7],[runtime[1],runtime[2],runtime[18],runtime[56],20,1,5],[[0,1,0]],[[0,0]]]),
            "4≡5+⟜×¯3"                          : (1, [[0,6,0,1,0,3,0,0,27,0,5,17,0,2,0,4,17,7],[runtime[0],runtime[2],runtime[18],runtime[56],4,5,-3],[[0,1,0]],[[0,0]]]),
            "7≡5+⟜2 ¯3"                         : (1, [[0,6,0,5,0,2,0,0,27,0,4,17,0,1,0,3,17,7],[runtime[0],runtime[18],runtime[56],7,5,2,-3],[[0,1,0]],[[0,0]]]),
            "2≡√4"                              : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[5],runtime[18],2,4],[[0,1,0]],[[0,0]]]),
            "3≡3√27"                            : (1, [[0,3,0,0,0,2,17,0,1,0,2,17,7],[runtime[5],runtime[18],3,27],[[0,1,0]],[[0,0]]]),
            "√'x'"                              : (TypeError,[[0,1,0,0,16,7],[runtime[5],'x'],[[0,1,0]],[[0,0]]]),
            "6≡2∧3"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[10],runtime[18],6,2,3],[[0,1,0]],[[0,0]]]),
            "0≡¯2∧0"                            : (1, [[0,2,0,0,0,3,17,0,1,0,2,17,7],[runtime[10],runtime[18],0,-2],[[0,1,0]],[[0,0]]]),
            "'a'∧¯1"                            : (TypeError,[[0,1,0,0,0,2,17,7],[runtime[10],-1,'a'],[[0,1,0]],[[0,0]]]),
            "0.75≡∨˜0.5"                        : (1, [[0,4,0,2,0,0,26,16,0,1,0,3,17,7],[runtime[11],runtime[18],runtime[45],0.75,0.5],[[0,1,0]],[[0,0]]]),
            "1.75≡2∨0.25"                       : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[11],runtime[18],1.75,2,0.25],[[0,1,0]],[[0,0]]]),
            "F←-⋄2∨f"                           : (TypeError,[[0,0,33,0,0,48,6,34,0,0,0,1,0,2,17,7],[runtime[1],runtime[11],2],[[0,1,0]],[[0,1]]]),
            "0≡¬1"                              : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[9],runtime[18],0,1],[[0,1,0]],[[0,0]]]),
            "1≡¬0"                              : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[9],runtime[18],1,0],[[0,1,0]],[[0,0]]]),
            "2≡¬¯1"                             : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[9],runtime[18],2,-1],[[0,1,0]],[[0,0]]]),
            "¬'a'"                              : (TypeError,[[0,1,0,0,16,7],[runtime[9],'a'],[[0,1,0]],[[0,0]]]),
            "0≡3¬4"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[9],runtime[18],0,3,4],[[0,1,0]],[[0,0]]]),
            "2≡4¬3"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[9],runtime[18],2,4,3],[[0,1,0]],[[0,0]]]),
            "4≡5¬2"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[9],runtime[18],4,5,2],[[0,1,0]],[[0,0]]]),
            "5≡'g'¬'c'"                         : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[9],runtime[18],5,'g','c'],[[0,1,0]],[[0,0]]]),
            "'b'≡'c'¬2"                         : (1, [[0,2,0,0,0,4,17,0,1,0,3,17,7],[runtime[9],runtime[18],2,'b','c'],[[0,1,0]],[[0,0]]]),
            "2¬'c'"                             : (TypeError,[[0,2,0,0,0,1,17,7],[runtime[9],2,'c'],[[0,1,0]],[[0,0]]]),
            "F←{𝕩}⋄0¬f"                         : (TypeError,[[1,1,33,0,0,48,6,34,0,0,0,0,0,1,17,7,34,0,1,7],[runtime[9],0],[[0,1,0],[0,0,1]],[[0,1],[16,3]]]),
            "0≡|0"                              : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[8],runtime[18],0],[[0,1,0]],[[0,0]]]),
            "5≡|¯5"                             : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[8],runtime[18],5,-5],[[0,1,0]],[[0,0]]]),
            "6≡|6"                              : (1, [[0,2,0,0,16,0,1,0,2,17,7],[runtime[8],runtime[18],6],[[0,1,0]],[[0,0]]]),
            "∞≡|¯∞"                             : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[8],runtime[18],math.inf,-math.inf],[[0,1,0]],[[0,0]]]),
            "F←+-⋄|f"                           : (TypeError,[[0,1,0,0,20,33,0,0,48,6,34,0,0,0,2,16,7],[runtime[0],runtime[1],runtime[8]],[[0,1,0]],[[0,1]]]),
            "2≡3|8"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[8],runtime[18],2,3,8],[[0,1,0]],[[0,0]]]),
            "2≡3|¯7"                            : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[8],runtime[18],2,3,-7],[[0,1,0]],[[0,0]]]),
            "¯1≡¯3|8"                           : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[8],runtime[18],-1,-3,8],[[0,1,0]],[[0,0]]]),
            "26|'A'"                            : (TypeError,[[0,2,0,0,0,1,17,7],[runtime[8],26,'A'],[[0,1,0]],[[0,0]]]),
            '"a"≡⥊<\'a\''                       : (1, [[0,3,0,0,16,0,2,16,0,1,0,4,17,7],[runtime[12],runtime[18],runtime[22],'a',bqnstr("a")],[[0,1,0]],[[0,0]]]),
            '"abcd"≡⊑<"abcd"'                   : (1, [[0,3,0,0,16,0,2,16,0,1,0,3,17,7],[runtime[12],runtime[18],runtime[37],bqnstr("abcd")],[[0,1,0]],[[0,0]]]),
            "0≡5>5"                             : (1, [[0,3,0,0,0,3,17,0,1,0,2,17,7],[runtime[13],runtime[18],0,5],[[0,1,0]],[[0,0]]]),
            "0≡3≥4"                             : (1, [[0,4,0,0,0,3,17,0,1,0,2,17,7],[runtime[17],runtime[18],0,3,4],[[0,1,0]],[[0,0]]]),
            '0≡≠""'                             : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[14],runtime[18],0,bqnstr("")],[[0,1,0]],[[0,0]]]),
            '1≡≠"a"'                            : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[14],runtime[18],1,bqnstr("a")],[[0,1,0]],[[0,0]]]),
            "1≡≠'a'"                            : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[14],runtime[18],1,'a'],[[0,1,0]],[[0,0]]]),
            '2≡≠"ab"'                           : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[14],runtime[18],2,bqnstr("ab")],[[0,1,0]],[[0,0]]]),
            "25≡≠↕25"                           : (1, [[0,3,0,2,16,0,0,16,0,1,0,3,17,7],[runtime[14],runtime[18],runtime[28],25],[[0,1,0]],[[0,0]]]),
            "1≡×5"                              : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[2],runtime[18],1,5],[[0,1,0]],[[0,0]]]),
            "¯1≡×¯2.5"                          : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[2],runtime[18],-1,-2.5],[[0,1,0]],[[0,0]]]),
            "3≡3⌊4"                             : (1, [[0,3,0,0,0,2,17,0,1,0,2,17,7],[runtime[6],runtime[18],3,4],[[0,1,0]],[[0,0]]]),
            "¯3≡¯3⌊∞"                           : (1, [[0,3,0,0,0,2,17,0,1,0,2,17,7],[runtime[6],runtime[18],-3,math.inf],[[0,1,0]],[[0,0]]]),
            "4≡3⌈4"                             : (1, [[0,2,0,0,0,3,17,0,1,0,2,17,7],[runtime[7],runtime[18],4,3],[[0,1,0]],[[0,0]]]),
            "1≡1⌈¯1"                            : (1, [[0,3,0,0,0,2,17,0,1,0,2,17,7],[runtime[7],runtime[18],1,-1],[[0,1,0]],[[0,0]]]),
            "5≡⌈4.01"                           : (1, [[0,3,0,0,16,0,1,0,2,17,7],[runtime[7],runtime[18],5,4.01],[[0,1,0]],[[0,0]]]),
            "⟨⟩≡≢'a'"                           : (1, [[0,2,0,1,16,0,0,11,0,17,7],[runtime[18],runtime[19],'a'],[[0,1,0]],[[0,0]]]),
            "⟨⟩≡≢0"                             : (1, [[0,2,0,1,16,0,0,11,0,17,7],[runtime[18],runtime[19],0],[[0,1,0]],[[0,0]]]),
            "⟨0⟩‿⟨1⟩‿⟨2⟩≡⥊¨↕3"                  : (1, [[0,7,0,2,16,0,3,0,1,26,16,0,0,0,4,11,1,0,5,11,1,0,6,11,1,11,3,17,7],[runtime[18],runtime[22],runtime[28],runtime[47],0,1,2,3],[[0,1,0]],[[0,0]]]),
            '(↕6)≡⟜(≠¨)○(2‿3⊸⥊)⟨⟩‿"a"‿"ab"‿"abc"‿"abcd"‿"abcde"‿"abcdef"' : (1, [[11,0,0,11,0,12,0,13,0,14,0,15,0,16,11,7,0,2,0,6,0,9,0,10,11,2,27,0,5,0,4,0,0,26,0,7,0,1,27,27,0,8,0,3,16,17,7],[runtime[14],runtime[18],runtime[22],runtime[28],runtime[47],runtime[54],runtime[55],runtime[56],6,2,3,bqnstr("a"),bqnstr("ab"),bqnstr("abc"),bqnstr("abcd"),bqnstr("abcde"),bqnstr("abcdef")],[[0,1,0]],[[0,0]]]),
            "≡⟜(≠¨)4‿0‿2⥊↕0"                    : (1, [[0,7,0,3,16,0,2,0,6,0,7,0,8,11,3,17,0,4,0,0,26,0,5,0,1,27,16,7],[runtime[14],runtime[18],runtime[22],runtime[28],runtime[47],runtime[56],4,0,2],[[0,1,0]],[[0,0]]]),
            "6≡+´↕4"                            : (1, [[0,5,0,2,16,0,3,0,0,26,16,0,1,0,4,17,7],[runtime[0],runtime[18],runtime[28],runtime[50],6,4],[[0,1,0]],[[0,0]]]),
            '(⊑≡⊣´)"a"‿2‿(3‿"d")'               : (1, [[0,6,0,4,0,5,0,7,11,2,11,3,0,3,0,1,26,0,0,0,2,21,16,7],[runtime[18],runtime[20],runtime[37],runtime[50],2,3,bqnstr("a"),bqnstr("d")],[[0,1,0]],[[0,0]]]),
            '0(⊑≡⊣´)"a"‿2‿(3‿"d")'              : (1, [[0,7,0,5,0,6,0,8,11,2,11,3,0,3,0,1,26,0,0,0,2,21,0,4,17,7],[runtime[18],runtime[20],runtime[37],runtime[50],0,2,3,bqnstr("a"),bqnstr("d")],[[0,1,0]],[[0,0]]]),
            '(2⊸⊑≡⊢´)"a"‿2‿(3‿"d")'             : (1, [[0,7,0,5,0,6,0,8,11,2,11,3,0,3,0,1,26,0,0,0,2,0,4,0,5,27,21,16,7],[runtime[18],runtime[21],runtime[37],runtime[50],runtime[55],2,3,bqnstr("a"),bqnstr("d")],[[0,1,0]],[[0,0]]]),
            '⊑""'                               : (AssertionError,[[0,1,0,0,16,7],[runtime[37],bqnstr("")],[[0,1,0]],[[0,0]]]),
            "⊑2‿0⥊⟨⟩"                           : (AssertionError,[[11,0,0,0,0,2,0,3,11,2,17,0,1,16,7],[runtime[22],runtime[37],2,0],[[0,1,0]],[[0,0]]]),
            '2(⊣≡⊢´)"a"‿2‿(3‿"d")'              : (1, [[0,6,0,4,0,5,0,7,11,2,11,3,0,3,0,2,26,0,0,0,1,21,0,4,17,7],[runtime[18],runtime[20],runtime[21],runtime[50],2,3,bqnstr("a"),bqnstr("d")],[[0,1,0]],[[0,0]]]),
            "7‿10≡+¨´⟨⟨2,3⟩,⟨5,7⟩⟩"             : (1, [[0,6,0,7,11,2,0,8,0,4,11,2,11,2,0,3,0,2,0,0,26,26,16,0,1,0,4,0,5,11,2,17,7],[runtime[0],runtime[18],runtime[47],runtime[50],7,10,2,3,5],[[0,1,0]],[[0,0]]]),
            "+´11"                              : (AssertionError,[[0,2,0,1,0,0,26,16,7],[runtime[0],runtime[50],11],[[0,1,0]],[[0,0]]]),
            "-´<'a'"                            : (AssertionError,[[0,3,0,1,16,0,2,0,0,26,16,7],[runtime[1],runtime[12],runtime[50],'a'],[[0,1,0]],[[0,0]]]),
            '×´3‿1⥊"abc"'                       : (AssertionError,[[0,5,0,1,0,3,0,4,11,2,17,0,2,0,0,26,16,7],[runtime[2],runtime[22],runtime[50],3,1,bqnstr("abc")],[[0,1,0]],[[0,0]]]),
        })


if __name__ == "__main__":
    unittest.main()
