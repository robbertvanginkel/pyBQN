import unittest

from . import VM


class ByteCodeTest(unittest.TestCase):
    """https://github.com/mlochbaum/BQN/blob/master/test/cases/bytecode.bqn"""
    # fmt: off
    cases = {
        "5"             : (5, [[0,0,7],[5],[[0,1,0]],[[0,0]]]),
        "4⋄3"           : (3, [[0,0,6,0,1,7],[4,3],[[0,1,0]],[[0,0]]]),
        "a←5"           : (5, [[0,0,33,0,0,48,7],[5],[[0,1,0]],[[0,1]]]),
        "a←5⋄a↩4"       : (4, [[0,0,33,0,0,48,6,0,1,33,0,0,49,7],[5,4],[[0,1,0]],[[0,1]]]),
        "a←2⋄b←3⋄a"     : (2, [[0,0,33,0,0,48,6,0,1,33,0,1,48,6,34,0,0,7],[2,3],[[0,1,0]],[[0,2]]]),
        "a←1⋄A 4"       : (1, [[0,0,33,0,0,48,6,34,0,0,7],[1],[[0,1,0]],[[0,1]]]),
        "a←2⋄3 A 4"     : (2, [[0,0,33,0,0,48,6,0,2,34,0,0,0,1,17,7],[2,3,4],[[0,1,0]],[[0,1]]]),
        "{𝕩}6"          : (6, [[0,0,1,1,16,7,34,0,1,7],[6],[[0,1,0],[0,0,1]],[[0,0],[6,3]]]),
        "A←{𝕨}⋄3 A 4"   : (3, [[1,1,33,0,0,48,6,0,1,34,0,0,0,0,17,7,34,0,2,7],[3,4],[[0,1,0],[0,0,[[],[1]]]],[[0,1],[16,3]]]),
        "a‿b←7‿2⋄a"     : (7, [[0,0,0,1,11,2,33,0,0,33,0,1,12,2,48,6,34,0,0,7],[7,2],[[0,1,0]],[[0,2]]]),
        "·‿b←7‿2⋄b"     : (2, [[0,0,0,1,11,2,44,33,0,0,12,2,48,6,34,0,0,7],[7,2],[[0,1,0]],[[0,1]]]),
        "0{𝕨𝕏1}2"       : (2, [[0,2,1,1,0,0,17,7,0,1,34,0,1,34,0,2,19,7],[0,1,2],[[0,1,0],[0,0,1]],[[0,0],[8,3]]]),
        "{({𝕨}𝕨)𝕏𝕩}5"   : (5, [[0,0,1,1,16,7,32,0,1,34,0,1,34,0,2,1,2,18,19,7,34,0,2,7],[5],[[0,1,0],[0,0,1],[0,0,[[],[2]]]],[[0,0],[6,3],[20,3]]]),
        "{𝕩{a‿b←𝕨}𝕨,𝕩}8": (8, [[0,0,1,1,16,7,34,0,2,1,2,32,0,1,19,6,34,0,1,7,34,0,2,33,0,3,33,0,4,12,2,48,7],[8],[[0,1,0],[0,0,1],[0,0,[[],[2]]]],[[0,0],[6,3],[20,5]]]),
        "4{𝔽}"          : (4, [[1,1,0,0,26,7,34,0,1,7],[4],[[0,1,0],[1,1,1]],[[0,0],[6,2]]]),
        "4{𝔽⋄𝕩}6"       : (6, [[0,1,1,1,0,0,26,16,7,34,0,4,6,34,0,1,7],[4,6],[[0,1,0],[1,0,1]],[[0,0],[9,5]]]),
        "3{𝔾}{𝕩} 1"     : (1, [[0,1,1,1,1,2,0,0,27,16,7,34,0,1,7,34,0,2,7],[3,1],[[0,1,0],[0,0,1],[2,1,2]],[[0,0],[11,3],[15,3]]])
    }
    # fmt: on

    def test_vm(self):
        for case, (expected, input) in self.cases.items():
            with self.subTest(case=case):
                self.assertEqual(VM(*input)(), expected)


if __name__ == "__main__":
    unittest.main()
